// NOTE: This code is auto-generated by `teraslice-cli assets registry`
// any manual changes will be lost next time this gets auto-generated.

import Accumulate from '../src/accumulate/processor';
import AccumulateSchema from '../src/accumulate/schema';

import AccumulateByKey from '../src/accumulate_by_key/processor';
import AccumulateByKeySchema from '../src/accumulate_by_key/schema';

import AddKey from '../src/add_key/processor';
import AddKeySchema from '../src/add_key/schema';

import AddShortId from '../src/add_short_id/processor';
import AddShortIdSchema from '../src/add_short_id/schema';

import CopyField from '../src/copy_field/processor';
import CopyFieldSchema from '../src/copy_field/schema';

import CopyMetadataField from '../src/copy_metadata_field/processor';
import CopyMetadataFieldSchema from '../src/copy_metadata_field/schema';

import CountByField from '../src/count_by_field/processor';
import CountByFieldSchema from '../src/count_by_field/schema';

import CountUnique from '../src/count_unique/processor';
import CountUniqueSchema from '../src/count_unique/schema';

import DataGeneratorFetcher from '../src/data_generator/fetcher';
import DataGeneratorSchema from '../src/data_generator/schema';
import DataGeneratorSlicer from '../src/data_generator/slicer';

import DataWindowToArray from '../src/data_window_to_array/processor';
import DataWindowToArraySchema from '../src/data_window_to_array/schema';

import DateRouter from '../src/date_router/processor';
import DateRouterSchema from '../src/date_router/schema';

import DebugRoutes from '../src/debug_routes/processor';
import DebugRoutesSchema from '../src/debug_routes/schema';

import Dedupe from '../src/dedupe/processor';
import DedupeSchema from '../src/dedupe/schema';

import DropField from '../src/drop_field/processor';
import DropFieldSchema from '../src/drop_field/schema';

import DropFieldConditional from '../src/drop_field_conditional/processor';
import DropFieldConditionalSchema from '../src/drop_field_conditional/schema';

import Extraction from '../src/extraction/processor';
import ExtractionSchema from '../src/extraction/schema';

import FieldRouter from '../src/field_router/processor';
import FieldRouterSchema from '../src/field_router/schema';

import Filter from '../src/filter/processor';
import FilterSchema from '../src/filter/schema';

import FilterByDate from '../src/filter_by_date/processor';
import FilterByDateSchema from '../src/filter_by_date/schema';

import FilterByRequiredFields from '../src/filter_by_required_fields/processor';
import FilterByRequiredFieldsSchema from '../src/filter_by_required_fields/schema';

import FilterByUnknownFields from '../src/filter_by_unknown_fields/processor';
import FilterByUnknownFieldsSchema from '../src/filter_by_unknown_fields/schema';

import GroupBy from '../src/group_by/processor';
import GroupBySchema from '../src/group_by/schema';

import JsonParser from '../src/json_parser/processor';
import JsonParserSchema from '../src/json_parser/schema';

import HashRouter from '../src/hash_router/processor';
import HashRouterSchema from '../src/hash_router/schema';

import KeyRouter from '../src/key_router/processor';
import KeyRouterSchema from '../src/key_router/schema';

import Match from '../src/match/processor';
import MatchSchema from '../src/match/schema';

import Output from '../src/output/processor';
import OutputSchema from '../src/output/schema';

import PostProcess from '../src/post_process/processor';
import PostProcessSchema from '../src/post_process/schema';

import RemoveEmptyFields from '../src/remove_empty_fields/processor';
import RemoveEmptyFieldsSchema from '../src/remove_empty_fields/schema';

import RemoveKey from '../src/remove_key/processor';
import RemoveKeySchema from '../src/remove_key/schema';

import RoutedSender from '../src/routed_sender/processor';
import RoutedSenderSchema from '../src/routed_sender/schema';

import SampleExact from '../src/sample_exact/processor';
import SampleExactSchema from '../src/sample_exact/schema';

import SampleExactEsPercent from '../src/sample_exact_es_percent/processor';
import SampleExactEsPercentSchema from '../src/sample_exact_es_percent/schema';

import SampleRandom from '../src/sample_random/processor';
import SampleRandomSchema from '../src/sample_random/schema';

import Selection from '../src/selection/processor';
import SelectionSchema from '../src/selection/schema';

import SetField from '../src/set_field/processor';
import SetFieldSchema from '../src/set_field/schema';

import SetFieldConditional from '../src/set_field_conditional/processor';
import SetFieldConditionalSchema from '../src/set_field_conditional/schema';

import SetKey from '../src/set_key/processor';
import SetKeySchema from '../src/set_key/schema';

import Sort from '../src/sort/processor';
import SortSchema from '../src/sort/schema';

import Stdout from '../src/stdout/processor';
import StdoutSchema from '../src/stdout/schema';

import Transform from '../src/transform/processor';
import TransformSchema from '../src/transform/schema';

import Window from '../src/window/processor';
import WindowSchema from '../src/window/schema';

export const ASSETS = {
    accumulate: {
        Processor: Accumulate,
        Schema: AccumulateSchema,
    },
    accumulate_by_key: {
        Processor: AccumulateByKey,
        Schema: AccumulateByKeySchema,
    },
    add_key: {
        Processor: AddKey,
        Schema: AddKeySchema,
    },
    add_short_id: {
        Processor: AddShortId,
        Schema: AddShortIdSchema,
    },
    copy_field: {
        Processor: CopyField,
        Schema: CopyFieldSchema,
    },
    copy_metadata_field: {
        Processor: CopyMetadataField,
        Schema: CopyMetadataFieldSchema,
    },
    count_by_field: {
        Processor: CountByField,
        Schema: CountByFieldSchema,
    },
    count_unique: {
        Processor: CountUnique,
        Schema: CountUniqueSchema,
    },
    data_generator: {
        Fetcher: DataGeneratorFetcher,
        Schema: DataGeneratorSchema,
        Slicer: DataGeneratorSlicer,
    },
    data_window_to_array: {
        Processor: DataWindowToArray,
        Schema: DataWindowToArraySchema,
    },
    date_router: {
        Processor: DateRouter,
        Schema: DateRouterSchema,
    },
    debug_routes: {
        Processor: DebugRoutes,
        Schema: DebugRoutesSchema,
    },
    dedupe: {
        Processor: Dedupe,
        Schema: DedupeSchema,
    },
    drop_field: {
        Processor: DropField,
        Schema: DropFieldSchema,
    },
    drop_field_conditional: {
        Processor: DropFieldConditional,
        Schema: DropFieldConditionalSchema,
    },
    extraction: {
        Processor: Extraction,
        Schema: ExtractionSchema,
    },
    field_router: {
        Processor: FieldRouter,
        Schema: FieldRouterSchema,
    },
    filter: {
        Processor: Filter,
        Schema: FilterSchema,
    },
    filter_by_date: {
        Processor: FilterByDate,
        Schema: FilterByDateSchema,
    },
    filter_by_required_fields: {
        Processor: FilterByRequiredFields,
        Schema: FilterByRequiredFieldsSchema,
    },
    filter_by_unknown_fields: {
        Processor: FilterByUnknownFields,
        Schema: FilterByUnknownFieldsSchema,
    },
    group_by: {
        Processor: GroupBy,
        Schema: GroupBySchema,
    },
    json_parser: {
        Processor: JsonParser,
        Schema: JsonParserSchema,
    },
    hash_router: {
        Processor: HashRouter,
        Schema: HashRouterSchema,
    },
    key_router: {
        Processor: KeyRouter,
        Schema: KeyRouterSchema,
    },
    match: {
        Processor: Match,
        Schema: MatchSchema,
    },
    output: {
        Processor: Output,
        Schema: OutputSchema,
    },
    post_process: {
        Processor: PostProcess,
        Schema: PostProcessSchema,
    },
    remove_empty_fields: {
        Processor: RemoveEmptyFields,
        Schema: RemoveEmptyFieldsSchema,
    },
    remove_key: {
        Processor: RemoveKey,
        Schema: RemoveKeySchema,
    },
    routed_sender: {
        Processor: RoutedSender,
        Schema: RoutedSenderSchema,
    },
    sample_exact: {
        Processor: SampleExact,
        Schema: SampleExactSchema,
    },
    sample_exact_es_percent: {
        Processor: SampleExactEsPercent,
        Schema: SampleExactEsPercentSchema,
    },
    sample_random: {
        Processor: SampleRandom,
        Schema: SampleRandomSchema,
    },
    selection: {
        Processor: Selection,
        Schema: SelectionSchema,
    },
    set_field: {
        Processor: SetField,
        Schema: SetFieldSchema,
    },
    set_field_conditional: {
        Processor: SetFieldConditional,
        Schema: SetFieldConditionalSchema,
    },
    set_key: {
        Processor: SetKey,
        Schema: SetKeySchema,
    },
    sort: {
        Processor: Sort,
        Schema: SortSchema,
    },
    stdout: {
        Processor: Stdout,
        Schema: StdoutSchema,
    },
    transform: {
        Processor: Transform,
        Schema: TransformSchema,
    },
    window: {
        Processor: Window,
        Schema: WindowSchema,
    },
};
